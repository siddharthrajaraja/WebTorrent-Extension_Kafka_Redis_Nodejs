    <script>
        const fs=require('fs')

        const DIRECTORY_LINUX=`/home/siddharth/Documents/Projects/css-portfolio/`
        const DIRECTORY_WIN=`C:\\electronProject\\`

        var createDirectory=(dir)=>{
            console.log("Creating :",dir)
            if (!fs.existsSync(dir)){
                fs.mkdirSync(dir);
            }
        }

        async function downloadMagnetURL(magnetURL,fileName){
        let DIRECTORY_WIN=`C:\\electronProject`
    
        const folderName=Cookies.get('roomName');

        let DIRECTORY_LINUX=`/home/siddharth/Documents/Projects`

        var client = new WebTorrent()

        // Sintel, a free, Creative Commons movie
        var torrentId = magnetURL

        client.add(torrentId, async function (torrent) {
        console.log(
            'bef add',client.downloadSpeed, client.uploadSpeed, client.ratio, client.progress)

        // Torrents can contain many files. Let's use the .mp4 file
        var file = await torrent.files.find(function (file) {
            console.log(file.downloaded,client.downloadSpeed, client.uploadSpeed, client.ratio, client.progress)

            return file
        })
        
        console.log("Here i am getting buffer")
        console.log("here is file :",file)
        file.getBuffer((err,buffer)=>{
            if(err) throw err;
            console.log(buffer)

            
            //fs.appendFileSync(DIRECTORY_WIN+file.name,buffer)
            //console.log("contects :",fs.readFileSync(file.name, "utf8"))

            createDirectory(DIRECTORY_WIN+'\\'+folderName)
            DIRECTORY_WIN=DIRECTORY_WIN+'\\'+folderName
            console.log("Path :",DIRECTORY_WIN+'\\'+fileName)
            fs.appendFileSync(DIRECTORY_WIN+'\\'+fileName,buffer)
            console.log("after appending :",fs)
        })

        file.getBlobURL(function (err, url) {
            if (err) throw err
            var a = document.createElement('a')
            a.download = file.name
            a.href = url
            a.textContent = 'Download ' + file.name
            document.body.appendChild(a)
        })

        // Display the file by adding it to the DOM.
        // Supports video, audio, image files, and more!
        console.log(typeof(file))
        var div = document.createElement("div");
        file.appendTo(div);
        
        div.classList.add("userdata");
        document.getElementById("uploadData").appendChild(div);
        addLogs(fileName);
        })

        
    }

        
        /**
         * connected-> room . roomID -> emit "${emailID} is connected  green "
         * send_file -> roomID, senderID, date, magnetURL => emit 
         * disconnect -> room . roomID -> emit "${emailID} is disconnected  green"
        **/
        
        function socketImplementation(roomId,roomName)
        {
            
            
            console.log(socket)
            socket.connect('http://localhost:8000')
            console.log("userobj: ",decoded)
            
            socket.emit('join_room',{userObj:decoded,roomID:roomId,roomName:roomName})
            

        }

        socket.on('joined_room',(data)=>{
                console.log("asert",data);
                M.toast({html:data,classes:'rounded green'})
            })

        socket.on('share_file',({magnetURL,fileName})=>{
            console.log("MagnetLink",magnetURL,fileName);
            downloadMagnetURL(magnetURL,fileName);
        })

        socket.on('search_file',({fileName})=>{
            console.log("Searchable file: ",fileName);
            getCurrentFilenames(fileName);
        })
        
        // var sendUsername=()=>{
        //     let data=document.getElementById('username').value
        //     socket.emit('change_name',{username:data})
        //     console.log("newUsername :",socket.username)
        // }
        
        // socket.on('new_message',(data)=>{
        //     console.log(data)
        // })

        // var sendTypingMessage=()=>{

        //     socket.emit('typing')

        // }

        //socket.on('typing',(data)=>{console.log(data.username+"is typing!!")})


        function addLogs(fileName) {
		const DIRECTORY_WIN=`C:\\electronProject`
        var folderName = Cookies.get('roomName');
		createDirectory(DIRECTORY_WIN+"\\"+folderName);
        var log = fileName

		var path = DIRECTORY_WIN+"\\"+folderName+"\\logs.txt";

		var obj = `
		{
			"file":"`+log+`",
			"datetime":"`+new Date().toLocaleString()+`"
		}
		`;
        console.log("sdfghzxcvbn",folderName, log,obj,JSON.parse(obj));

		fs.appendFile(path,JSON.stringify(JSON.parse(obj))+";", function (err) {
				if (err) throw err;
				console.log('Saved!');
			} );

            fs.readFile(path, 'utf8' , (err, data) => {
			if (err) {
				console.error(err)
				return
			}
			var arr = data.split(";");
			console.log("raed",data,arr)
			})
		
      }

    function retrieveLogs()
    {
        
        const DIRECTORY_WIN=`C:\\electronProject`
        var folderName = Cookies.get('roomName');

            var path = DIRECTORY_WIN+"\\"+folderName+"\\logs.txt";

        fs.readFile(path, 'utf8' , (err, data) => {
                if (err) {
                    console.error(err)
                    return
                }
                var arr = data.split(";");
                console.log("raed",data,arr);

                for(var i=0;i<arr.length;i++)
                {
                    var obj = JSON.parse(arr[i]);
                    console.log("logob: ",obj);
                    document.getElementById("uploadData").innerHTML += `
                    <div class="card horizontal col s12 m9">
                        <div class="card-stacked">
                            <div class="card-content">`
                            +obj.file+
                            `</div>
                            <div class="card-action">
                            <button class="btn blue" onclick="retrieveFile('`+obj.file+`')">Retrieve File</button>
                            </div>
                        </div>
                    </div>`
                }

                })
            
    }

    function retrieveFile(fileName)
    {
        console.log("fn: ",fileName);
        console.log(socket)
        socket.connect('http://localhost:8000')
        var roomId = Cookies.get('roomId');
        var roomName = Cookies.get('roomName');    
        socket.emit('retrieveFile',{fileName:fileName,roomID:roomId,roomName:roomName})

    }

    function toArrayBuffer(buf) {
    var ab = new ArrayBuffer(buf.length);
    var view = new Uint8Array(ab);
    for (var i = 0; i < buf.length; ++i) {
        view[i] = buf[i];
    }
    return ab;
}

    function getCurrentFilenames(fileName) {
	console.log("\nCurrent filenames:", fileName);
    var folderName = Cookies.get('roomName');
	fs.readdirSync(DIRECTORY_WIN+'\\'+folderName).forEach(file => {
	  console.log(file);
      if (file==fileName)
      {
          console.log("Found");
          fs.readFile(DIRECTORY_WIN+'\\'+folderName+'\\'+fileName , (err, data) => {
			if (err) {
				console.error(err)
				return
			}
			
			console.log("returived file: ",data,typeof(data))
            var arr = toArrayBuffer(data);
            var rds = fs.createReadStream(DIRECTORY_WIN+'\\'+folderName+'\\'+fileName)
            console.log(rds,typeof(rds));

            try{
                    var client = new WebTorrent()

                    var roomId = Cookies.get('roomId');
                    var roomName = Cookies.get('roomName');
                    client.seed(rds, function (torrent) {
                    console.log("aman loves yogita",torrent.magnetURI,decoded);
                    socket.emit('sending_file',{senderObj:decoded,roomID:roomId,magnetURL:torrent.magnetURI,fileName:fileName})
                    
                    })
                
            
            } 
            catch(e)
            {
                console.log("Terminated!!")
            }
		})
      }
	});
	console.log("\n");
  }


    </script>